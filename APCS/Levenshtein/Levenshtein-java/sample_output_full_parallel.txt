'Levenshtein basic': 'dog' -> 'dot' = 1
'Levenshtein basic': 'dog' -> 'dog' = 0
'Levenshtein basic': 'Saturday' -> 'Sunday' = 3
'Levenshtein basic': 'sitting' -> 'kitten' = 3
'Levenshtein no-alloc': 'dog' -> 'dot' = 1
'Levenshtein no-alloc': 'dog' -> 'dog' = 0
'Levenshtein no-alloc': 'Saturday' -> 'Sunday' = 3
'Levenshtein no-alloc': 'sitting' -> 'kitten' = 3
'Levenshtein hoisted string lengths': 'dog' -> 'dot' = 1
'Levenshtein hoisted string lengths': 'dog' -> 'dog' = 0
'Levenshtein hoisted string lengths': 'Saturday' -> 'Sunday' = 3
'Levenshtein hoisted string lengths': 'sitting' -> 'kitten' = 3
'Levenshtein hoisted all the things': 'dog' -> 'dot' = 1
'Levenshtein hoisted all the things': 'dog' -> 'dog' = 0
'Levenshtein hoisted all the things': 'Saturday' -> 'Sunday' = 3
'Levenshtein hoisted all the things': 'sitting' -> 'kitten' = 3
'Levenshtein best': 'dog' -> 'dot' = 1
'Levenshtein best': 'dog' -> 'dog' = 0
'Levenshtein best': 'Saturday' -> 'Sunday' = 3
'Levenshtein best': 'sitting' -> 'kitten' = 3
'Cheater equal lengths': 'dog' -> 'dot' = 1
'Cheater equal lengths': 'dog' -> 'dog' = 0
'Cheater equal lengths': 'dog' -> 'cat' = 2
'Cheater off by one': 'dog' -> 'dogo' = 1
'Cheater off by one': 'dog' -> 'doog' = 1
'Cheater off by one': 'dog' -> 'adog' = 1
'Cheater off by one': 'dog' -> 'acat' = 3
'Cheater combined': 'dog' -> 'dot' = 1
'Cheater combined': 'dog' -> 'dog' = 0
'Cheater combined': 'Saturday' -> 'Sunday' = 0
'Cheater combined': 'sitting' -> 'kitten' = 3

Loaded 370,102 words from words_alpha.txt

Sorted words in 77.67ms

Spawning up 75 tasks to build the map in parallel...
Waiting for 75 tasks to build the map...
pool-1-thread-1: done with [0 , 5,000), latch is 74
pool-1-thread-2: done with [5,000 , 10,000), latch is 73
pool-1-thread-5: done with [20,000 , 25,000), latch is 72
pool-1-thread-4: done with [15,000 , 20,000), latch is 71
pool-1-thread-3: done with [10,000 , 15,000), latch is 70
pool-1-thread-8: done with [35,000 , 40,000), latch is 69
pool-1-thread-6: done with [25,000 , 30,000), latch is 68
pool-1-thread-7: done with [30,000 , 35,000), latch is 67
pool-1-thread-2: done with [45,000 , 50,000), latch is 66
pool-1-thread-1: done with [40,000 , 45,000), latch is 65
pool-1-thread-5: done with [50,000 , 55,000), latch is 64
pool-1-thread-4: done with [55,000 , 60,000), latch is 63
pool-1-thread-3: done with [60,000 , 65,000), latch is 62
pool-1-thread-7: done with [75,000 , 80,000), latch is 61
pool-1-thread-8: done with [65,000 , 70,000), latch is 60
pool-1-thread-6: done with [70,000 , 75,000), latch is 59
pool-1-thread-1: done with [85,000 , 90,000), latch is 58
pool-1-thread-2: done with [80,000 , 85,000), latch is 57
pool-1-thread-5: done with [90,000 , 95,000), latch is 56
pool-1-thread-4: done with [95,000 , 100,000), latch is 55
pool-1-thread-2: done with [125,000 , 130,000), latch is 54
pool-1-thread-1: done with [120,000 , 125,000), latch is 53
pool-1-thread-3: done with [100,000 , 105,000), latch is 52
pool-1-thread-6: done with [115,000 , 120,000), latch is 51
pool-1-thread-5: done with [130,000 , 135,000), latch is 50
pool-1-thread-8: done with [110,000 , 115,000), latch is 49
pool-1-thread-7: done with [105,000 , 110,000), latch is 48
pool-1-thread-4: done with [135,000 , 140,000), latch is 47
pool-1-thread-2: done with [140,000 , 145,000), latch is 46
pool-1-thread-1: done with [145,000 , 150,000), latch is 45
pool-1-thread-7: done with [170,000 , 175,000), latch is 44
pool-1-thread-8: done with [165,000 , 170,000), latch is 43
pool-1-thread-5: done with [160,000 , 165,000), latch is 42
pool-1-thread-6: done with [155,000 , 160,000), latch is 41
pool-1-thread-3: done with [150,000 , 155,000), latch is 40
pool-1-thread-4: done with [175,000 , 180,000), latch is 39
pool-1-thread-2: done with [180,000 , 185,000), latch is 38
pool-1-thread-1: done with [185,000 , 190,000), latch is 37
pool-1-thread-8: done with [195,000 , 200,000), latch is 36
pool-1-thread-7: done with [190,000 , 195,000), latch is 35
pool-1-thread-5: done with [200,000 , 205,000), latch is 34
pool-1-thread-6: done with [205,000 , 210,000), latch is 33
pool-1-thread-3: done with [210,000 , 215,000), latch is 32
pool-1-thread-4: done with [215,000 , 220,000), latch is 31
pool-1-thread-7: done with [235,000 , 240,000), latch is 30
pool-1-thread-1: done with [225,000 , 230,000), latch is 29
pool-1-thread-8: done with [230,000 , 235,000), latch is 28
pool-1-thread-2: done with [220,000 , 225,000), latch is 27
pool-1-thread-5: done with [240,000 , 245,000), latch is 26
pool-1-thread-6: done with [245,000 , 250,000), latch is 25
pool-1-thread-3: done with [250,000 , 255,000), latch is 24
pool-1-thread-5: done with [280,000 , 285,000), latch is 23
pool-1-thread-2: done with [275,000 , 280,000), latch is 22
pool-1-thread-8: done with [270,000 , 275,000), latch is 21
pool-1-thread-1: done with [265,000 , 270,000), latch is 20
pool-1-thread-4: done with [255,000 , 260,000), latch is 19
pool-1-thread-7: done with [260,000 , 265,000), latch is 18
pool-1-thread-6: done with [285,000 , 290,000), latch is 17
pool-1-thread-3: done with [290,000 , 295,000), latch is 16
pool-1-thread-1: done with [310,000 , 315,000), latch is 15
pool-1-thread-8: done with [305,000 , 310,000), latch is 14
pool-1-thread-2: done with [300,000 , 305,000), latch is 13
pool-1-thread-7: done with [320,000 , 325,000), latch is 12
pool-1-thread-4: done with [315,000 , 320,000), latch is 11
pool-1-thread-5: done with [295,000 , 300,000), latch is 10
pool-1-thread-6: done with [325,000 , 330,000), latch is 9
pool-1-thread-6: done with [365,000 , 370,000), latch is 8
pool-1-thread-6: done with [370,000 , 370,102), latch is 7
pool-1-thread-5: done with [360,000 , 365,000), latch is 6
pool-1-thread-3: done with [330,000 , 335,000), latch is 5
pool-1-thread-4: done with [355,000 , 360,000), latch is 4
pool-1-thread-7: done with [350,000 , 355,000), latch is 3
pool-1-thread-2: done with [345,000 , 350,000), latch is 2
pool-1-thread-8: done with [340,000 , 345,000), latch is 1
pool-1-thread-1: done with [335,000 , 340,000), latch is 0
Done building neighbor map in parallel, elapsed time: 79,699.39ms, chunk size 5,000, thread count 8

229,751 total words with any neighbors
Min/avg/max word size: 1/8.38/24
Min/avg/max neighbor count: 1/4.01/88

Find path from 'dog' to 'cat'
Shortest path lengths: 3
digraph dog_cat_3{concentrate=true;
dog -> cog -> cag -> cat
dog -> cog -> cot -> cat
dog -> dag -> cag -> cat
dog -> dag -> dat -> cat
dog -> dot -> cot -> cat
dog -> dot -> dat -> cat
}
Done 12.78ms, considered 1,205 words for 6 total minimum paths

Find path from 'dog' to 'smart'
Shortest path lengths: 5
digraph dog_smart_5{concentrate=true;
dog -> dag -> dar -> mar -> mart -> smart
dog -> dag -> dar -> sar -> sart -> smart
dog -> dag -> dar -> dart -> mart -> smart
dog -> dag -> dar -> dart -> sart -> smart
dog -> dag -> dat -> mat -> mart -> smart
dog -> dag -> dat -> sat -> sart -> smart
dog -> dag -> dat -> dart -> mart -> smart
dog -> dag -> dat -> dart -> sart -> smart
dog -> dag -> mag -> mar -> mart -> smart
dog -> dag -> mag -> mat -> mart -> smart
dog -> dag -> mag -> marg -> mart -> smart
dog -> dag -> sag -> sar -> sart -> smart
dog -> dag -> sag -> sat -> sart -> smart
dog -> dag -> darg -> dart -> mart -> smart
dog -> dag -> darg -> dart -> sart -> smart
dog -> dag -> darg -> marg -> mart -> smart
dog -> dor -> dar -> mar -> mart -> smart
dog -> dor -> dar -> sar -> sart -> smart
dog -> dor -> dar -> dart -> mart -> smart
dog -> dor -> dar -> dart -> sart -> smart
dog -> dor -> mor -> mar -> mart -> smart
dog -> dor -> mor -> mort -> mart -> smart
dog -> dor -> dort -> dart -> mart -> smart
dog -> dor -> dort -> dart -> sart -> smart
dog -> dor -> dort -> mort -> mart -> smart
dog -> dor -> dort -> sort -> sart -> smart
dog -> dot -> dat -> mat -> mart -> smart
dog -> dot -> dat -> sat -> sart -> smart
dog -> dot -> dat -> dart -> mart -> smart
dog -> dot -> dat -> dart -> sart -> smart
dog -> dot -> mot -> mat -> mart -> smart
dog -> dot -> mot -> mort -> mart -> smart
dog -> dot -> sot -> sat -> sart -> smart
dog -> dot -> sot -> sort -> sart -> smart
dog -> dot -> dort -> dart -> mart -> smart
dog -> dot -> dort -> dart -> sart -> smart
dog -> dot -> dort -> mort -> mart -> smart
dog -> dot -> dort -> sort -> sart -> smart
dog -> mog -> mag -> mar -> mart -> smart
dog -> mog -> mag -> mat -> mart -> smart
dog -> mog -> mag -> marg -> mart -> smart
dog -> mog -> mor -> mar -> mart -> smart
dog -> mog -> mor -> mort -> mart -> smart
dog -> mog -> mot -> mat -> mart -> smart
dog -> mog -> mot -> mort -> mart -> smart
dog -> mog -> morg -> marg -> mart -> smart
dog -> mog -> morg -> mort -> mart -> smart
dog -> sog -> sag -> sar -> sart -> smart
dog -> sog -> sag -> sat -> sart -> smart
dog -> sog -> sot -> sat -> sart -> smart
dog -> sog -> sot -> sort -> sart -> smart
}
Done 175.76ms, considered 117,969 words for 51 total minimum paths

Find path from 'dog' to 'quack'
Shortest path lengths: 7
digraph dog_quack_7{concentrate=true;
dog -> dg -> du -> qu -> qua -> quar -> quark -> quack
dog -> dg -> du -> qu -> qua -> quaw -> quawk -> quack
dog -> do -> du -> qu -> qua -> quar -> quark -> quack
dog -> do -> du -> qu -> qua -> quaw -> quawk -> quack
dog -> do -> duo -> quo -> qua -> quar -> quark -> quack
dog -> do -> duo -> quo -> qua -> quaw -> quawk -> quack
dog -> do -> duo -> quo -> quor -> quar -> quark -> quack
dog -> bog -> boc -> bock -> bick -> buick -> quick -> quack
dog -> bog -> boc -> bock -> buck -> buick -> quick -> quack
dog -> dag -> dad -> duad -> quad -> quar -> quark -> quack
dog -> dag -> dad -> duad -> quad -> quaw -> quawk -> quack
dog -> dag -> dal -> dual -> qual -> quar -> quark -> quack
dog -> dag -> dal -> dual -> qual -> quaw -> quawk -> quack
dog -> dag -> dal -> dual -> qual -> quarl -> quark -> quack
dog -> dag -> dan -> duan -> quan -> quar -> quark -> quack
dog -> dag -> dan -> duan -> quan -> quaw -> quawk -> quack
dog -> dag -> dar -> gar -> guar -> quar -> quark -> quack
dog -> dag -> dat -> qat -> quat -> quar -> quark -> quack
dog -> dag -> dat -> qat -> quat -> quaw -> quawk -> quack
dog -> dag -> dat -> qat -> quat -> quart -> quark -> quack
dog -> dag -> gag -> gar -> guar -> quar -> quark -> quack
dog -> doa -> goa -> goar -> guar -> quar -> quark -> quack
dog -> doa -> koa -> kua -> qua -> quar -> quark -> quack
dog -> doa -> koa -> kua -> qua -> quaw -> quawk -> quack
dog -> doa -> koa -> kua -> kuar -> quar -> quark -> quack
dog -> doa -> poa -> pua -> qua -> quar -> quark -> quack
dog -> doa -> poa -> pua -> qua -> quaw -> quawk -> quack
dog -> doa -> toa -> tua -> qua -> quar -> quark -> quack
dog -> doa -> toa -> tua -> qua -> quaw -> quawk -> quack
dog -> doc -> boc -> bock -> bick -> buick -> quick -> quack
dog -> doc -> boc -> bock -> buck -> buick -> quick -> quack
dog -> doc -> duc -> duck -> buck -> buick -> quick -> quack
dog -> doc -> dock -> bock -> bick -> buick -> quick -> quack
dog -> doc -> dock -> bock -> buck -> buick -> quick -> quack
dog -> doc -> dock -> dick -> bick -> buick -> quick -> quack
dog -> doc -> dock -> duck -> buck -> buick -> quick -> quack
dog -> dod -> dad -> duad -> quad -> quar -> quark -> quack
dog -> dod -> dad -> duad -> quad -> quaw -> quawk -> quack
dog -> dod -> dud -> duad -> quad -> quar -> quark -> quack
dog -> dod -> dud -> duad -> quad -> quaw -> quawk -> quack
dog -> doe -> due -> que -> qua -> quar -> quark -> quack
dog -> doe -> due -> que -> qua -> quaw -> quawk -> quack
dog -> doe -> due -> que -> quae -> quar -> quark -> quack
dog -> doe -> due -> que -> quae -> quaw -> quawk -> quack
dog -> doe -> due -> que -> quae -> quare -> quark -> quack
dog -> dol -> dal -> dual -> qual -> quar -> quark -> quack
dog -> dol -> dal -> dual -> qual -> quaw -> quawk -> quack
dog -> dol -> dal -> dual -> qual -> quarl -> quark -> quack
dog -> don -> dan -> duan -> quan -> quar -> quark -> quack
dog -> don -> dan -> duan -> quan -> quaw -> quawk -> quack
dog -> don -> dun -> duan -> quan -> quar -> quark -> quack
dog -> don -> dun -> duan -> quan -> quaw -> quawk -> quack
dog -> doo -> duo -> quo -> qua -> quar -> quark -> quack
dog -> doo -> duo -> quo -> qua -> quaw -> quawk -> quack
dog -> doo -> duo -> quo -> quor -> quar -> quark -> quack
dog -> dor -> dar -> gar -> guar -> quar -> quark -> quack
dog -> dor -> dur -> gur -> guar -> quar -> quark -> quack
dog -> dor -> gor -> gar -> guar -> quar -> quark -> quack
dog -> dor -> gor -> gur -> guar -> quar -> quark -> quack
dog -> dor -> gor -> goar -> guar -> quar -> quark -> quack
dog -> dos -> duos -> quos -> quor -> quar -> quark -> quack
dog -> dot -> dat -> qat -> quat -> quar -> quark -> quack
dog -> dot -> dat -> qat -> quat -> quaw -> quawk -> quack
dog -> dot -> dat -> qat -> quat -> quart -> quark -> quack
dog -> dug -> du -> qu -> qua -> quar -> quark -> quack
dog -> dug -> du -> qu -> qua -> quaw -> quawk -> quack
dog -> dug -> duc -> duck -> buck -> buick -> quick -> quack
dog -> dug -> dud -> duad -> quad -> quar -> quark -> quack
dog -> dug -> dud -> duad -> quad -> quaw -> quawk -> quack
dog -> dug -> due -> que -> qua -> quar -> quark -> quack
dog -> dug -> due -> que -> qua -> quaw -> quawk -> quack
dog -> dug -> due -> que -> quae -> quar -> quark -> quack
dog -> dug -> due -> que -> quae -> quaw -> quawk -> quack
dog -> dug -> due -> que -> quae -> quare -> quark -> quack
dog -> dug -> dui -> qui -> qua -> quar -> quark -> quack
dog -> dug -> dui -> qui -> qua -> quaw -> quawk -> quack
dog -> dug -> dui -> qui -> quai -> quar -> quark -> quack
dog -> dug -> dui -> qui -> quai -> quaw -> quawk -> quack
dog -> dug -> dui -> qui -> quia -> quica -> quick -> quack
dog -> dug -> dui -> qui -> quin -> quink -> quick -> quack
dog -> dug -> dun -> duan -> quan -> quar -> quark -> quack
dog -> dug -> dun -> duan -> quan -> quaw -> quawk -> quack
dog -> dug -> duo -> quo -> qua -> quar -> quark -> quack
dog -> dug -> duo -> quo -> qua -> quaw -> quawk -> quack
dog -> dug -> duo -> quo -> quor -> quar -> quark -> quack
dog -> dug -> dur -> gur -> guar -> quar -> quark -> quack
dog -> dug -> pug -> pua -> qua -> quar -> quark -> quack
dog -> dug -> pug -> pua -> qua -> quaw -> quawk -> quack
dog -> dug -> rug -> rua -> qua -> quar -> quark -> quack
dog -> dug -> rug -> rua -> qua -> quaw -> quawk -> quack
dog -> dug -> tug -> tua -> qua -> quar -> quark -> quack
dog -> dug -> tug -> tua -> qua -> quaw -> quawk -> quack
dog -> dug -> dung -> qung -> quag -> quar -> quark -> quack
dog -> dug -> dung -> qung -> quag -> quaw -> quawk -> quack
dog -> gog -> gag -> gar -> guar -> quar -> quark -> quack
dog -> gog -> goa -> goar -> guar -> quar -> quark -> quack
dog -> gog -> gor -> gar -> guar -> quar -> quark -> quack
dog -> gog -> gor -> gur -> guar -> quar -> quark -> quack
dog -> gog -> gor -> goar -> guar -> quar -> quark -> quack
dog -> rog -> rug -> rua -> qua -> quar -> quark -> quack
dog -> rog -> rug -> rua -> qua -> quaw -> quawk -> quack
dog -> tog -> toa -> tua -> qua -> quar -> quark -> quack
dog -> tog -> toa -> tua -> qua -> quaw -> quawk -> quack
dog -> tog -> tug -> tua -> qua -> quar -> quark -> quack
dog -> tog -> tug -> tua -> qua -> quaw -> quawk -> quack
dog -> dong -> dung -> qung -> quag -> quar -> quark -> quack
dog -> dong -> dung -> qung -> quag -> quaw -> quawk -> quack
}
Done 671.99ms, considered 1,189,098 words for 107 total minimum paths

Find path from 'angerly' to 'invaded'
Done 0.10ms, considered 4 words for 0 total minimum paths

Find path from 'vulgates' to 'gumwood'
Done 877.15ms, considered 2,545,869 words for 0 total minimum paths

Find path from 'sweetly' to 'raddles'
Shortest path lengths: 10
digraph sweetly_raddles_10{concentrate=true;
sweetly -> sweety -> weety -> weedy -> wendy -> wandy -> waddy -> waddly -> waddle -> raddle -> raddles
sweetly -> sweety -> weety -> weedy -> wendy -> wandy -> waddy -> waddly -> waddle -> waddles -> raddles
sweetly -> sweety -> weety -> weedy -> reedy -> reed -> reded -> redded -> radded -> raddled -> raddles
sweetly -> sweety -> weety -> weedy -> reedy -> reed -> reded -> redded -> reddled -> raddled -> raddles
sweetly -> sweety -> weety -> weedy -> reedy -> reed -> reded -> redded -> reddled -> reddles -> raddles
sweetly -> sweety -> weety -> weedy -> weed -> reed -> reded -> redded -> radded -> raddled -> raddles
sweetly -> sweety -> weety -> weedy -> weed -> reed -> reded -> redded -> reddled -> raddled -> raddles
sweetly -> sweety -> weety -> weedy -> weed -> reed -> reded -> redded -> reddled -> reddles -> raddles
sweetly -> sweety -> weety -> weets -> welts -> pelts -> peles -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> weety -> weets -> wees -> pees -> peles -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> weety -> weets -> wees -> waes -> wades -> wadies -> waddies -> waddles -> raddles
sweetly -> sweety -> weety -> weets -> wees -> waes -> wales -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> weety -> weet -> reet -> reed -> reded -> redded -> radded -> raddled -> raddles
sweetly -> sweety -> weety -> weet -> reet -> reed -> reded -> redded -> reddled -> raddled -> raddles
sweetly -> sweety -> weety -> weet -> reet -> reed -> reded -> redded -> reddled -> reddles -> raddles
sweetly -> sweety -> weety -> weet -> weed -> reed -> reded -> redded -> radded -> raddled -> raddles
sweetly -> sweety -> weety -> weet -> weed -> reed -> reded -> redded -> reddled -> raddled -> raddles
sweetly -> sweety -> weety -> weet -> weed -> reed -> reded -> redded -> reddled -> reddles -> raddles
sweetly -> sweety -> weety -> weet -> weer -> waer -> wader -> wadder -> waddler -> waddles -> raddles
sweetly -> sweety -> weety -> weet -> wees -> pees -> peles -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> weety -> weet -> wees -> waes -> wades -> wadies -> waddies -> waddles -> raddles
sweetly -> sweety -> weety -> weet -> wees -> waes -> wales -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> sweet -> weet -> reet -> reed -> reded -> redded -> radded -> raddled -> raddles
sweetly -> sweety -> sweet -> weet -> reet -> reed -> reded -> redded -> reddled -> raddled -> raddles
sweetly -> sweety -> sweet -> weet -> reet -> reed -> reded -> redded -> reddled -> reddles -> raddles
sweetly -> sweety -> sweet -> weet -> weed -> reed -> reded -> redded -> radded -> raddled -> raddles
sweetly -> sweety -> sweet -> weet -> weed -> reed -> reded -> redded -> reddled -> raddled -> raddles
sweetly -> sweety -> sweet -> weet -> weed -> reed -> reded -> redded -> reddled -> reddles -> raddles
sweetly -> sweety -> sweet -> weet -> weer -> waer -> wader -> wadder -> waddler -> waddles -> raddles
sweetly -> sweety -> sweet -> weet -> wees -> pees -> peles -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> sweet -> weet -> wees -> waes -> wades -> wadies -> waddies -> waddles -> raddles
sweetly -> sweety -> sweet -> weet -> wees -> waes -> wales -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> sweet -> sleet -> slee -> alee -> ales -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> sweet -> sweer -> weer -> waer -> wader -> wadder -> waddler -> waddles -> raddles
sweetly -> sweety -> sweets -> weets -> welts -> pelts -> peles -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> sweets -> weets -> wees -> pees -> peles -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> sweets -> weets -> wees -> waes -> wades -> wadies -> waddies -> waddles -> raddles
sweetly -> sweety -> sweets -> weets -> wees -> waes -> wales -> pales -> padles -> paddles -> raddles
sweetly -> sweety -> sleety -> sleet -> slee -> alee -> ales -> pales -> padles -> paddles -> raddles
}
Done 852.83ms, considered 1,450,174 words for 39 total minimum paths

Find path from 'lenten' to 'chiffonnieres'
Done 666.47ms, considered 1,967,180 words for 0 total minimum paths

Find path from 'cradlemen' to 'discreation'
Done 0.00ms, considered 2 words for 0 total minimum paths

Find path from 'blinkingly' to 'taupou'
Done 0.02ms, considered 45 words for 0 total minimum paths

Find path from 'protanopia' to 'interiorist'
Done 0.00ms, considered 2 words for 0 total minimum paths

Find path from 'outchid' to 'paramountly'
Done 0.00ms, considered 4 words for 0 total minimum paths

Find path from 'bldr' to 'rewrote'
Shortest path lengths: 11
digraph bldr_rewrote_11{concentrate=true;
bldr -> bld -> bed -> bes -> best -> besit -> bedsit -> bedsite -> bedrite -> bewrite -> rewrite -> rewrote
bldr -> bld -> bed -> bet -> best -> besit -> bedsit -> bedsite -> bedrite -> bewrite -> rewrite -> rewrote
bldr -> bld -> bls -> bes -> best -> besit -> bedsit -> bedsite -> bedrite -> bewrite -> rewrite -> rewrote
bldr -> bld -> beld -> belt -> best -> besit -> bedsit -> bedsite -> bedrite -> bewrite -> rewrite -> rewrote
}
Done 1,025.04ms, considered 3,081,637 words for 4 total minimum paths

Find path from 'evacuee' to 'fall'
Shortest path lengths: 6
digraph evacuee_fall_6{concentrate=true;
evacuee -> evacue -> evalue -> value -> vale -> vall -> fall
}
Done 0.30ms, considered 92 words for 1 total minimum paths

Total search time: 4,285.47ms

Done.
